

.. meta::
   :description: Краткое руководство по LibreOffice: Глава 8 – Краткое руководство по Base
   :keywords: LibreOffice, Writer, Impress, Calc, Math, Base, Draw, либреоффис

.. Список автозамен

.. |br| raw:: html

   <br />
   
Глава 8 – Краткое руководство по Base
=====================================

Base – это компонент LibreOffice, предназначенный для создания баз данных. Источники данных или база данных – это массив информации, организованный особым образом для обеспечения более легкого доступа, управления и обновления. Например, список имён и адресов – это источник данных, используя который можно подготовить стандартные письма для почтовой рассылки. Список магазинов может быть источником данных, управляемым при помощи LibreOffice.

Если у вас есть информация, которую вы хотели бы упорядочить, Base поможет вам это сделать. Вы можете использовать электронную таблицу для организации информации, но поддержание в актуальном состоянии таблицы Calc часто может быть более сложным и трудоемким, чем использование базы данных Base.

Эта глава предназначена для людей, которые никогда не использовали Base или для тех, кто хочет ознакомиться с основами создания и использования баз данных. Терминология сведена к минимуму. В этой главе рассматриваются мастера, необходимые для создания частей базы данных и принципы, которые используют мастера. Глава также содержит ссылки на дополнительную информацию в *Base Handbook* или в *Руководстве по Base* (англоязычные версии которых находится в процессе написания).

Base Handbook и Руководство по Base предназначены для людей, которые уже понимают основы работы в Base и хотят изучить принципы работы программы более глубоко.

.. note:: Чтобы использовать Base, необходимо установить Java Runtime Environment (JRE). Используйте меню :menuselection:`Сервис --> Параметры --> LibreOffice --> Расширенные возможности`, чтобы выбрать нужный JRE из уже установленных на компьютере версий.

 Если JRE не установлен, то необходимо скачать и установить его. Для  Windows посетите сайт www.java.com. Для Linux, скачайте JRE с указанного сайта, либо используйте ``openjdk-7-jre``, доступный в репозитории вашего дистрибутива Linux. Пользователи Mac OS X могут установить JRE от Apple Inc. 

Одна из вещей, которая иногда смущает людей – это терминология. В частности, что за разница между понятиями база данных и источник данных? Base использует эти термины, как синонимы. Это потому, что база данных – это набор данных, которые могут существовать в различных формах. Они включают в себя текстовые файлы, электронные таблицы или файл, созданный программой управления базами данных.

Данные бесполезны, если мы не можем использовать информацию, которая в них содержится. Необходимо создать структуру для использования данных. Формулы и ссылки на ячейки в электронной таблице Calc используются для получения информации из данных, содержащихся в ячейках. Программы управления базами данных могут делать то же самое.

При работе в Base создаётся файл базы данных. Этот файл содержит данные и все структуры для получения информации из данных, созданные вами. Поскольку всё включено в один файл, то он называется встроенная база данных.

Base также может быть использован для подключения к другим базам данных. В этом случае Base создает отдельный файл для создания соединения. Он не является частью базы данных, так как существует вне файла базы. Для получения дополнительной информации обратитесь к *Base Handbook* или *Руководству по Base*.

Типы баз данных
---------------

Есть два типа баз данных: плоские и реляционные. Base может создавать и работать с обоими типами. В этой главе рассматриваются плоские базы данных. Реляционные базы данных подробно описаны в *Base Handbook* и в *Руководстве по Base*.

*Плоская база данных* содержит одну или несколько таблиц, каждая из которых содержит одно или несколько полей. Каждая таблица является полностью независимой от всех других таблиц в базе данных. Например, у вас есть база данных адресов с несколькими таблицами в ней. В них можно хранить ваши личные контакты, ваши деловые контакты и контакты вашего супруга. Некоторые контакты могут находиться в более чем одной таблице, при этом в разных таблицах информация об одном и том же человеке может отличаться.

*Реляционная база данных* содержит одну или несколько таблиц с одной или более связей, образованных между этими таблицами. Каждая связь определяется парой полей. Одно поле каждой пары относится к одной таблице, а второе поле принадлежит другой таблице. Хотя плоская база данных и может быть использована при множестве таблиц, но в ней отсутствует механизм для определения отношений между таблицами. В такой базе данных одинаковые данные должны быть введены по отдельности в одинаковых полях разных таблиц, при этом не должно быть ошибок при вводе данных. Хорошо разработанная реляционная база данных позволяет вводить данные только один раз, уменьшая возможные ошибки.

Плоская база данных
~~~~~~~~~~~~~~~~~~~

Рассмотрим адресную книгу. Как правило, данные в адресной книге, могут быть разделены на группы в зависимости от отношений между данными. Например, все имена помещены в одну группу. Другие группы могут включать фамилии, адреса, номера телефонов, дни рождения и так далее. Вероятно можно также разделить на отдельные группы номера телефонов по их местонахождению (дома, на работе, мобильный). Если эта информация находилась в электронной таблице, то вы скорее всего использовали отдельный столбец для каждой из этих групп. В базе данных этот столбец называется **поле**.

Другие отношения между данными могут быть использованы для дальнейшего определения структуры этих данных. В адресной книге одно значение в каждой из этих групп описывает конкретное лицо. В таблице будут столбцы, как описано выше. Мы переставим строки так, чтобы каждая из них содержала информацию о человеке. 

Распределим данные в таблице. Каждый столбец содержит данные с одинаковыми свойствами. Каждая строка содержит данные, описывающие конкретную организацию или человека. Каждая строка называется **записью**. Структура строк и столбцов называется **таблицей**.

Обработка данных без какой-либо структуры, как мы уже упоминали выше – это не самое лучшее решение. Теперь, после создания таблицы, у нас есть плоская база данных и мы можем использовать её, чтобы получать информацию из данных.

Мы будем использовать **запросы** для получения информации из базы данных. Запрос – это  такой способ задавать вопросы базе данных и получить на них ответы. Если мы хотим передать информацию из базы данных кому-то другому, то мы передадим им **отчёт**, основанный на запросе, который мы создали (Отчёт также может быть создан прямо из таблицы). 

Таким образом, плоская база данных состоит из **таблицы**, столбцы которой называются **полями**, а строки называются **записи**. Мы используем структуру таблицы, чтобы задавать вопросы и получать ответы, используя **запросы**. Для предоставления информации, полученной из запроса, другим людям, мы создадим **отчет**. Это термины, которые мы используем в базе данных: таблица, с ее полями и записями, запросы и отчеты.

Планирование базы данных
------------------------

.. tip:: Перед созданием базы данных, спланируйте свои действия: подумайте, что вы хотите делать и почему. От планирования зависят результаты, которые вы получите при использовании базы данных.

Вы должны чётко представлять себе, что вы будете делать с данными, которые у вас есть. Это представление включает в себя знание о том, как вы будете делить данные по столбцам, полям, строкам и записям. Этим вы определите, какой будет ваша таблица. *Какую информацию вы хотите получать из данных?* Этим вы определите, какие вопросы надо будет задавать базе данных. *Какую информацию вы хотите увидеть в отчете?* Итак, потребуется некоторое время, чтобы обдумать, какой результат вы хотите получить, прежде чем начать создавать базу данных.

В *Руководстве по Base* в *Главе 2. Планирование и проектирование баз данных* подробно освещается эта тема.

Мастер таблиц (смотрите раздел `Таблицы: использование мастера для создания таблиц`_) содержит список  предварительно настроенных таблиц для деловых и для личных целей. Мастер также содержит список полей для каждой из таких таблиц. Каждому из полей также уже заданы необходимые свойства. 

В результате мастер выполняет большую часть планирования за вас. Тем не менее, необходимо будет изучить готовую таблицу и подумать, например, следует ли использовать все предлагаемые поля? Будут ли использоваться дополнительные поля, которых нет в готовой таблице из мастера? Какие свойства должны иметь эти поля? 

Таким образом, нужно понимать, что вы делаете, как и зачем. Попрактикуйтесь в создании объектов базы данных, прежде чем создавать их в реальной базе. Узнайте сначала на примере, как создаётся база данных. При необходимости делайте для себя заметки о принципах работы Base.

Создание нового файла базы данных
---------------------------------


Открытие существующей базы данных
---------------------------------


Использование мастера баз данных для открытия существующей базы данных
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~



Главное окно Base и его части
-----------------------------

Секция База данных
~~~~~~~~~~~~~~~~~~

Секция Задачи
~~~~~~~~~~~~~~~~~~

Секция Список
~~~~~~~~~~~~~~~~~~

Представления
~~~~~~~~~~~~~~~~~~

Объекты базы данных
-------------------


Таблицы: использование мастера для создания таблиц
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Шаг 1: Выбор полей для вашей таблицы
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


Практическое упражнение: Создание таблицы «Мебель»
""""""""""""""""""""""""""""""""""""""""""""""""""""

Шаг 2: Выбор типа и формата полей
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Список Выбранные поля
"""""""""""""""""""""

Информация о поле
"""""""""""""""""

Практическое упражнение
"""""""""""""""""""""""

Шаг 3: Выбор первичного ключа
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Практическое упражнение
"""""""""""""""""""""""

Шаг 4: Создание таблицы
~~~~~~~~~~~~~~~~~~~~~~~

Практическое упражнение
"""""""""""""""""""""""

Ввод и удаление данных, используя окно Данные таблицы
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Ввод данных в таблицу
"""""""""""""""""""""

Практическое упражнение
"""""""""""""""""""""""

Изменение данных в ячейке таблицы
"""""""""""""""""""""""""""""""""

Удаление данных из таблицы
"""""""""""""""""""""""""""


--------

Формы: использование Мастера создания форм
------------------------------------------

Создание простой формы с помощью мастера форм
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


Ввод и удаление данных из форм
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Ввод и удаление данных из отдельных элементов управления
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

Удаление записи в форме
""""""""""""""""""""""""

----------

Запросы: использование Мастера создания запросов
------------------------------------------------

Планирование запроса
~~~~~~~~~~~~~~~~~~~~

Создание запроса
~~~~~~~~~~~~~~~~

Шаг 1: Выбор поля
""""""""""""""""""

Шаг 2: Порядок сортировки
"""""""""""""""""""""""""

Шаг 3: Условие поиска
"""""""""""""""""""""

Шаг 4: Полное или общее
"""""""""""""""""""""""

Шаги 5 и 6: Группировка и Условия группировки
""""""""""""""""""""""""""""""""""""""""""""""

Шаг 7: Альтернативные названия (Aliases)
"""""""""""""""""""""""""""""""""""""""""

Шаг 8: Обзор
""""""""""""

Пример детального запроса
~~~~~~~~~~~~~~~~~~~~~~~~~~

Пример итогового запроса
~~~~~~~~~~~~~~~~~~~~~~~~




Отчёты: использование мастера для создания отчёта
-------------------------------------------------




----------

Совмещение Base с остальными компонентами LibreOffice
-----------------------------------------------------

Base может быть использован, как отдельный самодостаточный продукт или его можно использовать с другими компонентами LibreOffice. Выбор зависит от того, что необходимо сделать с информацией из базы данных. 

В этом разделе упоминается несколько примеров, в которых Base может быть использован с другими компонентами LibreOffice. *Глава 7 – Обмен данными* в *Руководстве по Base*, а также отдельные руководства для других компонентов LibreOffice содержат инструкции, как это сделать. 

Writer
~~~~~~

Очень часто у пользователей есть база данных «Адресная книга». Используя Writer вместе с Base, можно распечатывать конверты, используя почтовые адреса из адресной книги, можно одновременно отправлять нескольким людям из адресной книги письма по электронной почте. Этот процесс называется *Рассылка писем*. Данная процедура объясняется в *Главе 11 – Рассылка писем* в *Руководстве по Writer*. 

Можно включать в документ Writer данные, которые находятся в одной из ваших баз данных. Конечно, можно просто посмотреть данные и вручную перенести их в документ, но при этом есть вероятность появления ошибок при вводе. При помощи связки Base с Writer можно разместить в документе поле, связанное с нужными данными. Поступая таким образом,  можно гарантировать соответствие данных в текстовом документе данным в базе данных. Данный метод объясняется в *Главе 14 – Работа с полями* в *Руководстве по Writer*.

.. note:: Также смотрите статью `LibreOffice Writer: Связанные поля  <http://librerussia.blogspot.ru/2014/12/libreoffice-writer-base.html>`_

Таблицы из текстовых документов могут быть скопированы в виде таблицы в базу данных. Новая таблица может быть создана в базе данных, включая данные из таблицы текстового документа. Или новая таблица может быть создана в базе данных без каких-либо данных. Или, если данные в таблице текстового документа расположены должным образом, эти данные могут быть добавлены в существующую таблицу базы данных. Как это сделать, описано в *Главе 7 Руководства по Base*.

Calc
~~~~

Base и Calc хорошо работают вместе. С помощью клавиши ``F4`` или меню :menuselection:`Вид --> Источники данных` в Calc открывается окно с зарегистрированными файлами – источниками данных. Данные и названия столбцов могут быть скопированы из источника данных в таблицу, которая открыта в Calc. Данные также могут быть скопированы из таблицы Calc в источник данных. Эти вопросы обсуждаются в *Руководстве по Calc* и в *Главе 7 Руководства по Base*. 

После того, как данные были скопированы из источника данных в таблицу, можно применить к ним все доступные функции Calc, в том числе создать диаграмму из данных. Это также обсуждается в *Руководстве по Calc* и в *Главе 7 Руководства по Base*.

Есть различные способы использования данных в электронной таблице в качестве источника данных. Один из способов заключается в создании файла Base для подключения к электронной таблице. Второй способ заключается в сохранении файла электронной таблицы в формате .dbf. Это формат, используемый Dbase. Base открывает такой формат файла. Всё это описано в *Главе 7 Руководства по Base*.

Impress
~~~~~~~

Base и Impress непосредственно вместе не используются, но могут быть сопряжены косвенным образом. Таблицы Calc могут быть вставлены в слайды. Таким образом, когда вы хотите использовать данные из базы данных на слайде, можно сначала скопировать данные в таблицу Calc, а затем вставить эту таблицу в слайд. Как именно это сделать, описано в *Главе 7 – Вставка электронных таблиц, диаграмм и других объектов* в *Руководстве по Impress*. 


Использование Base с другими источниками данных
------------------------------------------------

Base может быть использован с различными источниками данных, такими как: базы данных Oracle, GroupWise, Evolution (по LDAP и локально), адресная книга KDE, адресная книга Thunderbird/Icedove, электронные таблицы, базы данных Dbase, текст, базы данных MySQL и PostgreSQL. Кроме того, возможно подключение к источникам данных с помощью JDBC. 

Можно подключить Base непосредственно к некоторым из этих источников данных (текстовые файлы и электронные таблицы), сделав соответствующий выбор в мастере создания баз данных Base. *Глава 7 Руководства по Base* содержит инструкции о том, как работать с этими источниками данных.

Base требуется специальный драйвер для подключения к некоторым источникам данных. Примерами таких источников являются: PostgreSQL, MySQL, JDBC и Oracle JDBC. *Глава 7 Руководства по Base* описывает, как подключаться к таким источникам данных, а также о том, как с ними работать. 
